'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Names of different functions that can be used to create a component in ReasonReact
 * Used to parse the name from page components to create the URL path
 */
var COMPONENT_FUNCS = exports.COMPONENT_FUNCS = ['statelessComponent', 'statelessComponentWithRetainedProps', 'reducerComponent', 'reducerComponentWithRetainedProps'];

// TODO can we parse the AST generated by refmt to more reliably get the component name?
var isComponentDefinitionLine = function isComponentDefinitionLine(line) {
  return line.indexOf('let component') !== -1;
};

/**
 * Find the line that contains the component definition
 */
var getComponentDefinitionLine = exports.getComponentDefinitionLine = function getComponentDefinitionLine(fileSource) {
  return fileSource.split('\n').filter(Boolean).filter(isComponentDefinitionLine)[0];
};

var getNameFromReasonComponent = exports.getNameFromReasonComponent = function getNameFromReasonComponent(componentDef) {
  return COMPONENT_FUNCS.map(function (func) {
    return new RegExp(func + '\\("(.*?)"\\)');
  }).map(function (regex) {
    return regex.exec(componentDef);
  }).filter(Boolean).map(function (regexMatch) {
    return regexMatch[1];
  })[0];
};

/**
 * Given the source for a page component's file, parse the contents of the file
 * in order to determine the URL path for the page. This will use the name
 * of the ReasonReact component defined in the file.
 *
 * e.g. if the source contains
 * ```ocaml
 * let component = ReasonReact.statelessComponent("MyComponent");
 * ```
 * this will return `'MyComponent'`
 */
var getPathForComponent = exports.getPathForComponent = function getPathForComponent(source) {
  var line = getComponentDefinitionLine(source);
  if (!line) {
    return;
  }

  var name = getNameFromReasonComponent(line);
  return name === 'index' ? '/' : '/' + name + '/';
};